
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\plt_cdf-pvalues.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plt_cdf-pvalues.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plt_cdf-pvalues.py:


===============
CDF of p-values
===============
The example shows the cumulative disribution function (CDF) of the p-values of different post-selection inference methods for a composite hypothesis testing problem with a global null.

.. GENERATED FROM PYTHON SOURCE LINES 7-15

.. code-block:: default



    import PSILOGIT
    import numpy as np
    from PSILOGIT.tools import *
    from sklearn.linear_model import LogisticRegression, LogisticRegressionCV
    import matplotlib.pyplot as plt


.. GENERATED FROM PYTHON SOURCE LINES 16-17

Choice of the signal strength

.. GENERATED FROM PYTHON SOURCE LINES 17-19

.. code-block:: default

    nu = 0.1


.. GENERATED FROM PYTHON SOURCE LINES 20-21

Choice of the type of alternative (localized or disseminated)

.. GENERATED FROM PYTHON SOURCE LINES 21-24

.. code-block:: default

    modes = ['disseminated-signal' ,'localized-signal']
    mode = modes[0]


.. GENERATED FROM PYTHON SOURCE LINES 25-26

Choice of the number of steps for the rejection sampling method

.. GENERATED FROM PYTHON SOURCE LINES 26-28

.. code-block:: default

    nb_ite = 100000


.. GENERATED FROM PYTHON SOURCE LINES 29-30

Definition of the experiment.

.. GENERATED FROM PYTHON SOURCE LINES 30-39

.. code-block:: default

    if mode=='localized-signal':
        vartheta = np.zeros(10)
        vartheta[0] = nu
    else:
        vartheta = nu*np.ones(10)

    model = PSILOGIT.PSILOGIT(truetheta=vartheta, regularization=2, n=100, p=10)
    print('Size of the set of active variables: ', len(model.M))


.. GENERATED FROM PYTHON SOURCE LINES 40-41

Sampling states according to the conditional distribution using the rejection sampling method.

.. GENERATED FROM PYTHON SOURCE LINES 41-43

.. code-block:: default

    states = model.SEI_by_sampling(model.sig, nb_ite=nb_ite)


.. GENERATED FROM PYTHON SOURCE LINES 44-45

Sampling states according to the conditional distribution using the rejection sampling method **under the global null**.

.. GENERATED FROM PYTHON SOURCE LINES 45-52

.. code-block:: default

    thetanull = np.zeros(model.X.shape[1])
    signull = sigmoid(model.X @ thetanull)
    if np.max(np.abs(signull-model.sig))<1e-3:
        statesnull = np.copy(states)
    else:
        statesnull = model.SEI_by_sampling(signull, nb_ite=nb_ite)


.. GENERATED FROM PYTHON SOURCE LINES 53-55

p-values for the SIGLE procedures
---------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 55-59

.. code-block:: default

    tildeGN12, barpi = model.params_saturated(signull, statesnull)
    lspvals_selec, lspvals_sat, gaps = model.pval_SIGLE(states, barpi, l2_regularization=100000, grad_descent={'lr':0.01,'return_gaps':True,'max_ite':10000}, calibrated_from_samples=True, statesnull=statesnull)



.. GENERATED FROM PYTHON SOURCE LINES 60-62

p-values for the procedures derived from the work of Taylor & Tibshirani
------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 62-67

.. code-block:: default

    gamma = np.zeros(len(model.M))
    gamma[0] = 1
    lspvals_tay_1 = model.pval_taylor(states, thetanull=thetanull, gamma=gamma)
    lspvals_tay_Bon = model.pval_taylor(states, thetanull=thetanull, mode='Bonferroni')


.. GENERATED FROM PYTHON SOURCE LINES 68-70

p-values for the weak learner
-----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 70-72

.. code-block:: default

    lspvals_naive = model.pval_weak_learner(statesnull, states, barpi, signull=signull)


.. GENERATED FROM PYTHON SOURCE LINES 73-75

CDF of pvalues
--------------

.. GENERATED FROM PYTHON SOURCE LINES 75-78

.. code-block:: default

    lists_pvalues = [lspvals_naive, lspvals_tay_1, lspvals_tay_Bon, lspvals_selec, lspvals_sat]
    names = ['Weak learner', "TT-1", 'TT-Bonferroni', 'SIGLE Selected', 'SIGLE Saturated']
    model.plot_cdf_pvalues(lists_pvalues, names, states = states, sigalt=model.sig)
    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_plt_cdf-pvalues.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plt_cdf-pvalues.py <plt_cdf-pvalues.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plt_cdf-pvalues.ipynb <plt_cdf-pvalues.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
